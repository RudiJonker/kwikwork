Updated Summary for new Chat
App Name

kwikwork
Purpose

The kwikwork app is designed to provide a dashboard-based interface for job seekers and employers, featuring role-specific content (e.g., bio for seekers, business name for employers). It includes a profile screen with fetched user data, leveraging Supabase for authentication and user data management, with a profile picture and editing functionality.

Target Audience:

Job seekers (enemployed individuals in the community) and employers (could be anyone - home owners/ small businesses).

Development Environment:

Dependencies:

  "dependencies": {
    "@expo/vector-icons": "^14.1.0",
    "@react-navigation/bottom-tabs": "^7.4.6",
    "@react-navigation/native": "^7.1.17",
    "@react-navigation/stack": "^7.4.7",
    "@supabase/supabase-js": "^2.55.0",
    "expo": "~53.0.20",
    "expo-image-picker": "~16.1.4",
    "expo-status-bar": "~2.2.3",
    "react": "19.0.0",
    "react-native": "0.79.5",
    "react-native-dotenv": "^3.4.11",
    "react-native-get-random-values": "^1.11.0",
    "react-native-phone-number-input": "^2.1.0",
    "react-native-safe-area-context": "^5.4.0",
    "react-native-screens": "~4.11.1"
  },
  "devDependencies": {
    "@babel/core": "^7.20.0"


Supabase Schema

Tables:

users:

id (uuid, NOT NULL): Primary key, matches auth user UUID.
user_number (integer, NOT NULL, default: nextval('users_user_number_seq')): Unique user number.
name (text, NOT NULL): User name.
email (text, NOT NULL): User email.
phone (text, NOT NULL): User phone number.
role (text, NOT NULL, default 'seeker'): User role (e.g., 'seeker', 'employer', 'admin').
created_at (timestamp with time zone, NULLABLE, default CURRENT_TIMESTAMP): Creation timestamp.
bio (text, NULLABLE): Bio for seekers.
business_name (text, NULLABLE): Business name for employers.
profile_pic (text, NULLABLE): Storage path for profile picture.



RLS Policies:

"Users can view own data":

Table: public.users
Behavior: Permissive
Commands: SELECT, INSERT, UPDATE, DELETE, ALL
Target Roles: Public (all roles)
USING: (auth.uid() = id)
SQL: ALTER POLICY "Users can view own data" ON "public"."users" TO public USING (auth.uid() = id);


"Users can insert own data":

Table: public.users
Behavior: Permissive
Commands: SELECT, INSERT, UPDATE, DELETE, ALL
Target Roles: Public (all roles)
WITH CHECK: (auth.uid() = id)
SQL: ALTER POLICY "Users can insert own data" ON "public"."users" TO public WITH CHECK (auth.uid() = id);

*We need to extract the updated schema detials in the new chat.*



Project Directory

Path: C:\Users\rudij\Documents\Projects\kwikwork

Main GitHub Backup

Repository: https://github.com/RudiJonker/kwikwork.git

Branch: keyboard-avoidance (updated from feature/profile-screen to reflect the new working branch)

*We need to start with a new branch in the new chat.*

Directory Layout

src

components

theme

styles.js
theme.js




navigation

AppNavigator.js


screens

DashboardScreen.js
LoginScreen.js
SignupScreen.js
WelcomeScreen.js
ProfileScreen.js
ChatScreen.js
SettingsScreen.js
ShareScreen.js


utils

Supabase.js





Our Current Project Status

The app successfully loads the profile screen after login, displaying role-specific content (bio for seekers, business name for employers) fetched from Supabase, based on the local working backup loaded on August 20, 2025. This backup corrects the bio and business name fields to display according to user roles. Previous errors (e.g., ReferenceError: Property 'Platform' doesn't exist, Invariant Violation: ScrollView child layout, and TypeError: Cannot call a class as a function) arose when adding KeyboardAvoidingView and ScrollView, likely due to version incompatibilities with React 19.0.0, React Native 0.79.5, and React Navigation 7.x. The latest attempt to add keyboard-avoiding functionality failed with the TypeError, prompting a revert to the working backup. The profile screen currently uses a simple View-based layout with centered alignment, styled via theme/styles.js. The last successful log showed user data fetched (e.g., role 'seeker' for ww1@kw.com), with bio displaying correctly. The profile picture widget and editing functionality remain pending, and keyboard-avoiding functionality is the next target. The new keyboard-avoidance branch on GitHub now holds this working state, created to replace the potentially corrupted working-backup-aug20 or feature/profile-screen branches.
Relevant Information for Next Chat

Key Progress: The profile screen now fetches and displays real user data based on role, with the bio and business name fields corrected. A new keyboard-avoidance branch isolates the working backup.

Environment Notes: See package.json file attached. 

We need to properly research compatabililty relating to our current environment before installing any required dependencies in future.